<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="com.controller"/>
    <mvc:annotation-driven/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="suffix" value=".jsp"/>
        <property name="prefix" value="/WEB-INF/views/"/>
    </bean>

    <!--id的值必须配置并且必须是:multipartResolver
    maxUploadSizePerFile:设置能上传的每个文件的最大尺寸,单位为字节
    uploadTempDir:设置上传的临时目录,因为接收的数据可能很大,不可能都放在内存 所以就会把上传的部分数据放到临时目录
    defaultEncoding:默认编码类型-->

<!--    方法1：-->
    <!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="1000000"/>
    </bean>-->

<!--    方法2：-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>

    <!--方法一:
    1.添加apache commons依赖
    2.配置commons解析器CommonsMultipartResolver ,
    id的值必须配置并且必须是multipartResolver
    3.控制器方法参数类型是MultipartFile,参数名是页面中文件
    控件的名字(不匹配时,可以用RequestParam注解,注解的值等于控件名即可)


    方法二:(推荐的方法.这种方法是利用servlet 3.0的方式,所以你的tomcat必须支持servlet 3.0)
    1.配置DispatcherServlet的文件上传部分
    2.配置解析器类型为StandardServletMultipartResolver,
    id的值必须配置并且必须是multipartResolver
    3. 不需要添加commons的依赖-->
</beans>